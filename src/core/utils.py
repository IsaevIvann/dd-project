import requests
from django.conf import settings
from django.core.mail import send_mail, get_connection, EmailMessage


def _get(setting_name: str, default=None):
    return getattr(settings, setting_name, default)


def notify_telegram_new_order(order):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ê–î–ú–ò–ù–£ –≤ Telegram (–≤ —Ç–≤–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç).
    –ù–∞—Å—Ç—Ä–æ–π TELEGRAM_ADMIN_CHAT_ID –≤ settings.py.
    """
    token = _get("TELEGRAM_BOT_TOKEN", "")
    admin_chat_id = _get("TELEGRAM_ADMIN_CHAT_ID", "")
    if not (token and admin_chat_id):
        return

    text = (
        "üì¶ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\n\n"
        f"–ò–º—è: {order.name}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {order.phone or '‚Äî'}\n"
        f"Email: {order.email or '‚Äî'}\n"
        f"Telegram: {order.telegram or '‚Äî'}\n"
        f"WhatsApp: {order.whatsapp or '‚Äî'}\n"
        f"–ó–∞–±–æ—Ä: {order.pickup_address} ({order.pickup_time or '‚Äî'})\n"
        f"–î–æ—Å—Ç–∞–≤–∫–∞: {order.delivery_address} ({order.delivery_time or '‚Äî'})\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order.comment or '‚Äî'}"
    )

    url = f"https://api.telegram.org/bot{token}/sendMessage"
    data = {
        "chat_id": admin_chat_id,
        "text": text,
        "parse_mode": "HTML",
        "disable_web_page_preview": True,
    }
    try:
        r = requests.post(url, data=data, timeout=5)
        print("[TG admin] sent:", r.status_code, r.text[:200])
    except Exception as e:
        print(f"[TG admin] send failed: {e}")


def build_telegram_deeplink(order):
    """
    –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ —Å deep‚Äëlink –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (public_token).
    """
    bot_name = _get("TELEGRAM_BOT_NAME", "dropdelivery_admin_bot")
    return f"https://t.me/{bot_name}?start={order.public_token}"



def send_client_email(order):
    if not order.email:
        return
    subject = "D&D ‚Äî –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞"
    body = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {order.name}!\n\n"
        "–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ–º—Å—è.\n\n"
        f"–ó–∞–±–æ—Ä: {order.pickup_address} ({order.pickup_time or '‚Äî'})\n"
        f"–î–æ—Å—Ç–∞–≤–∫–∞: {order.delivery_address} ({order.delivery_time or '‚Äî'})\n\n"
        "–ü–æ–ª—É—á–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã –≤ Telegram: "
        f"{build_telegram_deeplink(order)}\n\n"
        "‚Äî –ö–æ–º–∞–Ω–¥–∞ Drop & Delivery"
    )
    try:
        # timeout —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è SMTP‚Äëbackend‚Äô–∞
        conn = get_connection(timeout=5)
        EmailMessage(
            subject, body, settings.DEFAULT_FROM_EMAIL, [order.email], connection=conn
        ).send(fail_silently=True)
    except Exception as e:
        print("[MAIL] send failed:", e)


def notify_client_telegram(order, text):
    """
    –°–æ–æ–±—â–µ–Ω–∏–µ –ö–õ–ò–ï–ù–¢–£ –≤ Telegram (–µ—Å–ª–∏ –æ–Ω –ø—Ä–∏–≤—è–∑–∞–ª —á–∞—Ç —á–µ—Ä–µ–∑ /start).
    """
    token = _get("TELEGRAM_BOT_TOKEN", "")
    if not (token and order.telegram_chat_id):
        return

    url = f"https://api.telegram.org/bot{token}/sendMessage"
    data = {"chat_id": order.telegram_chat_id, "text": text}
    try:
        requests.post(url, data=data, timeout=5)
    except Exception as e:
        print("[TG client] send failed:", e)
